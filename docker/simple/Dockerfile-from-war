# Builds a minimal docker image with openjdk and moqui with various volumes for configuration and persisted data outside the container
# NOTE: add components, build and if needed load data before building a docker image with this

FROM openjdk:12-jdk-alpine
MAINTAINER dataquest <info@dataquest.sk>

WORKDIR /opt/moqui

# for running from the war directly, preferred approach unzips war in advance (see docker-build.sh that does this)
COPY moqui-plus-runtime.war .
RUN unzip moqui-plus-runtime.war

# exposed as volumes for configuration purposes
VOLUME ["/opt/moqui/runtime/conf", "/opt/moqui/runtime/lib", "/opt/moqui/runtime/classes", "/opt/moqui/runtime/ecomponent"]
# exposed as volumes to persist data outside the container, recommended
VOLUME ["/opt/moqui/runtime/log", "/opt/moqui/runtime/txlog", "/opt/moqui/runtime/sessions", "/opt/moqui/runtime/db", "/opt/moqui/runtime/elasticsearch"]


# Main Servlet Container Port
EXPOSE 80
#EXPOSE 5701

# this is to run from the war file directly, preferred approach unzips war file in advance
ENTRYPOINT ["java", "-cp", ".", "MoquiStart", "port=80"]

#HEALTHCHECK --interval=10s --timeout=600ms --start-period=90s CMD curl --fail http://localhost:8080 || exit 1
HEALTHCHECK NONE
# specify this as a default parameter if none are specified with docker exec/run, ie run production by default
CMD ["conf=conf/MoquiTestConf.xml"]
